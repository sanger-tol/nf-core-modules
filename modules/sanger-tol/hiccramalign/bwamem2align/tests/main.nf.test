
nextflow_process {

    name "Test Process HICCRAMALIGN_BWAMEM2ALIGN"
    script "../main.nf"
    process "HICCRAMALIGN_BWAMEM2ALIGN"

    tag "modules"
    tag "modules_sangertol"
    tag "bwamem2/index"
    tag "hiccramalign"
    tag "hiccramalign/bwamem2align"
    tag "nf-core/bwamem2/index"

    setup {
        nfcoreInitialise("${launchDir}/library/")
        nfcoreInstall("${launchDir}/library/", ["bwamem2/index"])
        nfcoreLink("${launchDir}/library/", "${baseDir}/modules/")

        run("BWAMEM2_INDEX") {
            script "../../../../nf-core/bwamem2/index/main.nf"
            process {
                """
                input[0] = Channel.of([
                    [ id: "test" ],
                    file(params.modules_testdata_base_path + 'Meles_meles/assembly/release/mMelMel3.1_paternal_haplotype/GCA_922984935.2.subset.fasta.gz', checkIfExists: true)
                ])
                """
            }
        }
    }

    test("meles meles") {
        config "./nextflow.config"

        when {

            params {
                samtools_cat_args = ""
                samtools_fastq_args = "-F0xB00 -nt"
                bwamem2_mem_args = "-5SPCp"
                samtools_fixmate_args = "-mpu"
                samtools_view_args = "-q 0 -F 0x904"
                samtools_sort_args = "--write-index -l1"
            }

            process {
                """
                input[0] = Channel.of([
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'Meles_meles/genomic_data/mMelMel3/hic-arima2/35528_2%231_subset.cram', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'Meles_meles/genomic_data/mMelMel3/hic-arima2/35528_2%231_subset.cram.crai', checkIfExists: true),
                    1,
                    [0, 1],
                    file(params.modules_testdata_base_path + 'Meles_meles/assembly/release/mMelMel3.1_paternal_haplotype/GCA_922984935.2.subset.fasta.gz', checkIfExists: true),
                ]).join(BWAMEM2_INDEX.out.index)
                .map { meta, cram, crai, chunkn, range, ref, index ->
                    [ meta, cram, crai, chunkn, range, index, ref ]
                }
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

        cleanup {
            nfcoreUnlink("${launchDir}/library/", "${baseDir}/modules/")
        }

    }

    test("meles meles - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = Channel.of([
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'Meles_meles/genomic_data/mMelMel3/hic-arima2/35528_2%231_subset.cram', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'Meles_meles/genomic_data/mMelMel3/hic-arima2/35528_2%231_subset.cram.crai', checkIfExists: true),
                    1,
                    [0, 1],
                    file(params.modules_testdata_base_path + 'Meles_meles/assembly/release/mMelMel3.1_paternal_haplotype/GCA_922984935.2.subset.fasta.gz', checkIfExists: true),
                ]).join(BWAMEM2_INDEX.out.index)
                .map { meta, cram, crai, chunkn, range, ref, index ->
                    [ meta, cram, crai, chunkn, range, index, ref ]
                }
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

        cleanup {
            nfcoreUnlink("${launchDir}/library/", "${baseDir}/modules/")
        }

    }

}
