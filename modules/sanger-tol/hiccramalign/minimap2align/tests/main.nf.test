
nextflow_process {

    name "Test Process HICCRAMALIGN_MINIMAP2ALIGN"
    script "../main.nf"
    process "HICCRAMALIGN_MINIMAP2ALIGN"

    tag "modules"
    tag "modules_sangertol"
    tag "minimap2/index"
    tag "hiccramalign"
    tag "hiccramalign/minimap2align"
    tag "nf-core/minimap2/index"

    setup {
        nfcoreSetup(launchDir)
        nfcoreInstall(launchDir, ["minimap2/index"])
        nfcoreLink(launchDir, baseDir)

        run("MINIMAP2_INDEX") {
            script "../../../../nf-core/minimap2/index/main.nf"
            process {
                """
                input[0] = Channel.of([
                    [ id: "test" ],
                    file(params.modules_testdata_base_path + 'Meles_meles/assembly/release/mMelMel3.1_paternal_haplotype/GCA_922984935.2.subset.fasta.gz', checkIfExists: true)
                ])
                """
            }
        }
    }

    test("meles meles") {
        config "./nextflow.config"

        when {

            params {
                samtools_cat_args     = ""
                samtools_fastq_args   = "-F0xB00 -nt"
                minimap2_args         = "-ax sr --no-pairing"
                samtools_fixmate_args = "-mpu"
                samtools_view_args    = "-q 0 -F 0x904"
                samtools_sort_args    = "--write-index -l1"
            }

            process {
                """
                input[0] = Channel.of([
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'Meles_meles/genomic_data/mMelMel3/hic-arima2/35528_2%231_subset.cram', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'Meles_meles/genomic_data/mMelMel3/hic-arima2/35528_2%231_subset.cram.crai', checkIfExists: true),
                    1,
                    [0, 1]
                ]).join(MINIMAP2_INDEX.out.index)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

        cleanup {
            nfcoreCleanup(launchDir, baseDir)
        }

    }

    test("meles meles - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = Channel.of([
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'Meles_meles/genomic_data/mMelMel3/hic-arima2/35528_2%231_subset.cram', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'Meles_meles/genomic_data/mMelMel3/hic-arima2/35528_2%231_subset.cram.crai', checkIfExists: true),
                    1,
                    [0, 1]
                ]).join(MINIMAP2_INDEX.out.index)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

        cleanup {
            nfcoreCleanup(launchDir, baseDir)
        }

    }
}
