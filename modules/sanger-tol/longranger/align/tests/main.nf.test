nextflow_process {

    name "Test Process LONGRANGER_ALIGN"
    script "../main.nf"
    process "LONGRANGER_ALIGN"

    tag "modules"
    tag "modules_sangertol"
    tag "longranger"
    tag "longranger/mkref"
    tag "longranger/align"

    setup {
        run("LONGRANGER_MKREF") {
            script "../../sanger-tol/longranger/mkref/main.nf"
            process {
                """
                input[0] = Channel.of([
                    [ id: "test" ],
                    file(params.modules_testdata_base_path + 'Meles_meles/assembly/release/mMelMel3.1_paternal_haplotype/GCA_922984935.2.subset.fasta.gz', checkIfExists: true)
                ])
                """
            }
        }
    }

    test("sarscov2 - bam") {

        when {
            process {
                """
                input[0] = LONGRANGER_MKREF.out.reference
                input[1] = [
                    [ id: "test" ],
                    file(params.modules_testdata_base_path + "Undibacterium_unclassified/genomic_data/baUndUnlc1/10x/baUndUnlc1_S12_L002_R1_001.fastq.gz")
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2 - bam - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = LONGRANGER_MKREF.out.reference
                input[1] = [
                    [ id: "test" ],
                    file(params.modules_testdata_base_path + "Undibacterium_unclassified/genomic_data/baUndUnlc1/10x/baUndUnlc1_S12_L002_R1_001.fastq.gz")
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
