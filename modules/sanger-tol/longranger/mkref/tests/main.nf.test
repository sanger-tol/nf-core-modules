nextflow_process {

    name "Test Process LONGRANGER_MKREF"
    script "../main.nf"
    process "LONGRANGER_MKREF"
    config "./nextflow.config"

    tag "modules"
    tag "modules_sangertol"
    tag "nf-core/gunzip"
    tag "longranger"
    tag "longranger/mkref"

    setup {
        nfcoreInitialise("${launchDir}/library/")
        nfcoreInstall("${launchDir}/library/", ["gunzip"])
        nfcoreLink("${launchDir}/library/", "${baseDir}/modules")

        run("GUNZIP"){
            script "../../../../nf-core/gunzip/main.nf"
            process {
                """
                input[0] = [
                    [ id: "test" ],
                    file(params.modules_testdata_base_path + 'Undibacterium_unclassified/assembly/draft/baUndUnlc1.hic.hap1.p_ctg.fa.gz', checkIfExists: true)
                ]
                """
            }
        }
    }

    test("undibacterium unclassified") {

        when {
            process {
                """
                input[0] = GUNZIP.out.gunzip
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

        cleanup {
            nfcoreUnlink("${launchDir}/library/", "${baseDir}/modules")
        }

    }

    test("undibacterium unclassified - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = GUNZIP.out.gunzip
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

        cleanup {
            nfcoreUnlink("${launchDir}/library/", "${baseDir}/modules")
        }

    }

}
