nextflow_process {

    name "Test Process PRETEXT_GRAPH"
    script "../main.nf"
    process "PRETEXT_GRAPH"

    tag "modules"
    tag "modules_sangertol"
    tag "pretext"
    tag "pretext/graph"
    tag ""

    config './nextflow.config'

    test("Undibacterium unclassified - NO SPLIT") {

        when {

            params {
                split_telomere  = false
            }

            process {
                """
                input[0] = Channel.of(
                    // Pretext File
                    [
                        [ id:'test' ], // meta map
                        file(params.modules_testdata_base_path + 'Undibacterium_unclassified/analysis/hic_mapping/baUndUnlc1_hic_phased_hap2_merged.bam', checkIfExists: true)
                    ]
                )
                input[1] = Channel.of(
                    // Gap file
                )
                input[2] = Channel.of(
                    // Coverage file
                )
                input[3] = Channel.of(
                    // Telomere file array
                )
                input[4] = Channel.of(
                    // Repeats file
                )
                input[5] = params.split_telomere
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("Undibacterium unclassified - NO SPLIT") {

        when {

            params {
                split_telomere  = true
            }

            process {
                """
                input[0] = Channel.of(
                    // Pretext File
                    [
                        [ id:'test' ], // meta map
                        file(params.modules_testdata_base_path + 'Undibacterium_unclassified/analysis/hic_mapping/baUndUnlc1_hic_phased_hap2_merged.bam', checkIfExists: true)
                    ]
                )
                input[1] = Channel.of(
                    // Gap file
                )
                input[2] = Channel.of(
                    // Coverage file
                )
                input[3] = Channel.of(
                    // Telomere file array
                )
                input[4] = Channel.of(
                    // Repeats file
                )
                input[5] = params.split_telomere
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("Undibacterium unclassified - bam - stub") {

        options "-stub"

        when {

            params {
                samtools_view_args = "-u"
                sort_args          = "-k4"
            }

            process {
                """
                input[0] = Channel.of(
                    [
                        [ id:'test' ], // meta map
                        file(params.modules_testdata_base_path + 'Undibacterium_unclassified/analysis/hic_mapping/baUndUnlc1_hic_phased_hap2_merged.bam', checkIfExists: true)
                    ]
                )
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
